/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SuperheroesIndexRouteImport } from './routes/superheroes/index'
import { Route as SuperheroesCreateRouteImport } from './routes/superheroes/create'
import { Route as SuperheroesIdRouteImport } from './routes/superheroes/$id'
import { Route as SuperheroesIdEditRouteImport } from './routes/superheroes/$id.edit'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SuperheroesIndexRoute = SuperheroesIndexRouteImport.update({
  id: '/superheroes/',
  path: '/superheroes/',
  getParentRoute: () => rootRouteImport,
} as any)
const SuperheroesCreateRoute = SuperheroesCreateRouteImport.update({
  id: '/superheroes/create',
  path: '/superheroes/create',
  getParentRoute: () => rootRouteImport,
} as any)
const SuperheroesIdRoute = SuperheroesIdRouteImport.update({
  id: '/superheroes/$id',
  path: '/superheroes/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const SuperheroesIdEditRoute = SuperheroesIdEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => SuperheroesIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/superheroes/$id': typeof SuperheroesIdRouteWithChildren
  '/superheroes/create': typeof SuperheroesCreateRoute
  '/superheroes': typeof SuperheroesIndexRoute
  '/superheroes/$id/edit': typeof SuperheroesIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/superheroes/$id': typeof SuperheroesIdRouteWithChildren
  '/superheroes/create': typeof SuperheroesCreateRoute
  '/superheroes': typeof SuperheroesIndexRoute
  '/superheroes/$id/edit': typeof SuperheroesIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/superheroes/$id': typeof SuperheroesIdRouteWithChildren
  '/superheroes/create': typeof SuperheroesCreateRoute
  '/superheroes/': typeof SuperheroesIndexRoute
  '/superheroes/$id/edit': typeof SuperheroesIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/superheroes/$id'
    | '/superheroes/create'
    | '/superheroes'
    | '/superheroes/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/superheroes/$id'
    | '/superheroes/create'
    | '/superheroes'
    | '/superheroes/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/superheroes/$id'
    | '/superheroes/create'
    | '/superheroes/'
    | '/superheroes/$id/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SuperheroesIdRoute: typeof SuperheroesIdRouteWithChildren
  SuperheroesCreateRoute: typeof SuperheroesCreateRoute
  SuperheroesIndexRoute: typeof SuperheroesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/superheroes/': {
      id: '/superheroes/'
      path: '/superheroes'
      fullPath: '/superheroes'
      preLoaderRoute: typeof SuperheroesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/superheroes/create': {
      id: '/superheroes/create'
      path: '/superheroes/create'
      fullPath: '/superheroes/create'
      preLoaderRoute: typeof SuperheroesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/superheroes/$id': {
      id: '/superheroes/$id'
      path: '/superheroes/$id'
      fullPath: '/superheroes/$id'
      preLoaderRoute: typeof SuperheroesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/superheroes/$id/edit': {
      id: '/superheroes/$id/edit'
      path: '/edit'
      fullPath: '/superheroes/$id/edit'
      preLoaderRoute: typeof SuperheroesIdEditRouteImport
      parentRoute: typeof SuperheroesIdRoute
    }
  }
}

interface SuperheroesIdRouteChildren {
  SuperheroesIdEditRoute: typeof SuperheroesIdEditRoute
}

const SuperheroesIdRouteChildren: SuperheroesIdRouteChildren = {
  SuperheroesIdEditRoute: SuperheroesIdEditRoute,
}

const SuperheroesIdRouteWithChildren = SuperheroesIdRoute._addFileChildren(
  SuperheroesIdRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SuperheroesIdRoute: SuperheroesIdRouteWithChildren,
  SuperheroesCreateRoute: SuperheroesCreateRoute,
  SuperheroesIndexRoute: SuperheroesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
